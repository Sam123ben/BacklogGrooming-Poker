apiVersion: apps/v1
kind: Deployment
metadata:
  name: planning-poker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: planning-poker
  template:
    metadata:
      labels:
        app: planning-poker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: planning-poker
        image: ghcr.io/sam123ben/planning-poker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        envFrom:
        - secretRef:
            name: planning-poker-env
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: env-config
          mountPath: /app/.env
          subPath: .env
      volumes:
      - name: env-config
        secret:
          secretName: planning-poker-env
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000