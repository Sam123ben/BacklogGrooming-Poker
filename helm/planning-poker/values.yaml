## Global settings
nameOverride: ""
fullnameOverride: ""

## Image settings
image:
  repository: planning-poker
  tag: latest
  pullPolicy: IfNotPresent

## Deployment settings
replicaCount: 2
podAnnotations: {}
podSecurityContext: {}
securityContext: {}

## Resource settings
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

## Redis settings
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  persistence:
    enabled: true
    size: 10Gi
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

## Certificate settings
certificates:
  enabled: true
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  clusterIssuer:
    create: true
    name: letsencrypt-prod
    email: admin@example.com
    server: https://acme-v02.api.letsencrypt.org/directory

## Ingress settings
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: planning-poker.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: planning-poker-tls
      hosts:
        - planning-poker.example.com

## Service settings
service:
  type: ClusterIP
  port: 80

## Prometheus monitoring settings
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s